Jogo - the werewolves of miller's hollow

struct Jogador{
    ID;
    Personagem;
    status;
}

enum sts{
    vivo;
    morto;
    dormindo;
}

2º ficheiro cpp- class Lobo(char personagem(setPers(); getPers();))        |
3º ficheiro cpp- class Vidente(char personagem(setPers(); getPers();))     } têm em comum estar vivo(T) ou morto(F)
4º ficheiro cpp- class Aledao(char personagem(setPers(); getPers();))      |

As classes Lobo, Vidente e Aledao herdam o status e o id


1º ficheiro cpp
- class comum{
    - private:
        status;
            - setStatus();(é dispensavel por causa do adormece acorda e morre)
            - getStatus();

        id;
            setID();
            getID();

        nomeDoJogador;
            set();
            get();

    pub:
    voto();

    adormece();
    acorda();
    morre();
}
5º ficheiro cpp - main


5 ficheiros cpp
4 ficheiros .h

Estanciar

Vidente vidente();
Lobos lobo1(),lobo2();
Aledoes aldeoes1()...aldeoes8();

Vidente vidente[]= {vidente}

Lobos lobos[]=  {lobo1,lobo2}

Aldeoes aldeoes[]= {aldeoes1...aledoes8}
    ciclo for (n<7)
        aldeoes[n].aledoes



funcao adormece:
o status passa para adormecidos
|
|
acorda os lobos
    |
    mata() -verifica os aldeoes vivos ou mortos
|
|
adormece os lobos(verificar vivo ou morto)
|
|
vidente acorda(se ainda viva)
    |
    pergunta quem é lobo se é lobo
    se for diz q é vrdd senao diz que é falso
|
|
vidente adormece
|
|
acorda e debate
    |
    matar() se querem matar ou nao S/N
|
|
ciclo